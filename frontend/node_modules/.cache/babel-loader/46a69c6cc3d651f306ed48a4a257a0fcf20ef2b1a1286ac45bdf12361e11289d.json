{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst totalAmount = localStorage.getItem(\"totalAmount\") !== null ? JSON.parse(localStorage.getItem(\"totalAmount\")) : 0;\nconst totalQuantity = localStorage.getItem(\"totalQuantity\") !== null ? JSON.parse(localStorage.getItem(\"totalQuantity\")) : 0;\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\n};\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const id = action.payload.id;\n      const extraIngredients = action.payload.extraIngredients;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          extraIngredients: newItem.extraIngredients\n        });\n        state.totalQuantity++;\n      } else if (existingItem && JSON.stringify(existingItem.extraIngredients) === JSON.stringify(extraIngredients)) {\n        state.totalQuantity++;\n        existingItem.quantity++;\n      } else {\n        const value = JSON.parse(localStorage.getItem(\"cartItems\"));\n        let index = value.findIndex(s => s.id === existingItem.id);\n        const newValue = {\n          id: existingItem.id,\n          title: existingItem.title,\n          image01: existingItem.image01,\n          price: existingItem.price,\n          quantity: 1,\n          totalPrice: existingItem.price,\n          extraIngredients: extraIngredients\n        };\n        state.cartItems.splice(index, 1, newValue);\n        state.totalQuantity = state.cartItems.reduce((total, item) => total + Number(item.quantity), 0);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","items","localStorage","getItem","JSON","parse","totalAmount","totalQuantity","setItemFunc","item","setItem","stringify","initialState","cartItems","cartSlice","name","reducers","addItem","state","action","newItem","payload","id","extraIngredients","existingItem","find","push","title","image01","price","quantity","totalPrice","value","index","findIndex","s","newValue","splice","reduce","total","Number","map","removeItem","filter","deleteItem","cartActions","actions"],"sources":["C:/Users/User/Desktop/food-ordering-app/frontend/React-food-delivery-app/src/store/shopping-cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst items =\r\n  localStorage.getItem(\"cartItems\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [];\r\n\r\nconst totalAmount =\r\n  localStorage.getItem(\"totalAmount\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"totalAmount\"))\r\n    : 0;\r\n\r\nconst totalQuantity =\r\n  localStorage.getItem(\"totalQuantity\") !== null\r\n    ? JSON.parse(localStorage.getItem(\"totalQuantity\"))\r\n    : 0;\r\n\r\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\r\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\r\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\r\n};\r\n\r\nconst initialState = {\r\n  cartItems: items,\r\n  totalQuantity: totalQuantity,\r\n  totalAmount: totalAmount,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n\r\n  \r\n  reducers: {\r\n    // =========== add item ============\r\n    addItem(state, action) {\r\n      const newItem = action.payload;\r\n      const id = action.payload.id;\r\n      const extraIngredients = action.payload.extraIngredients;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      \r\n      if (!existingItem) {\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          title: newItem.title,\r\n          image01: newItem.image01,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          extraIngredients: newItem.extraIngredients\r\n        });\r\n        state.totalQuantity++;\r\n\r\n      } else if(existingItem && (JSON.stringify(existingItem.extraIngredients) === JSON.stringify(extraIngredients)))  {\r\n        state.totalQuantity++;\r\n        existingItem.quantity++;\r\n      } else {\r\n\r\n        const value = JSON.parse(localStorage.getItem(\"cartItems\"));\r\n        let index = value.findIndex(s => s.id === existingItem.id);\r\n        const newValue = {\r\n        id: existingItem.id,\r\n        title: existingItem.title,\r\n        image01: existingItem.image01,\r\n        price: existingItem.price,\r\n        quantity: 1,\r\n        totalPrice: existingItem.price,\r\n        extraIngredients: extraIngredients\r\n      }\r\n        state.cartItems.splice(index, 1, newValue); \r\n        state.totalQuantity = state.cartItems.reduce(\r\n          (total, item) => total + Number(item.quantity),\r\n          0\r\n        );\r\n      }\r\n     \r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n\r\n\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n\r\n   \r\n\r\n    // ========= remove item ========\r\n\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) - Number(existingItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n\r\n    //============ delete item ===========\r\n\r\n    deleteItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),\r\n        0\r\n      );\r\n      setItemFunc(\r\n        state.cartItems.map((item) => item),\r\n        state.totalAmount,\r\n        state.totalQuantity\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}